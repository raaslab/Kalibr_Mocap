All of this was done in 16.04 ubuntu


# MOCAP stuff 
# mocap software running to read mocap positions check config directory for setting
roslaunch mocap_optitrack mocap.launch 

# x2 broadcast mocaps position over wifi 
open project 5N_.ttp(there is a backup of this file too)
go to motive and view and check data streaming, and change ip and select broadcast computer's address press enter to select

# x3 read mocap positions  quad nd tags, some confis in "px4_mocap_config.yaml "
# connect pixhawk ttyACM to usb_hub and tyUSB0 to the same hub
roslaunch mavros_extras px4_mocap.launch 
# needed by mavros to fake gps(for some reason it was already showing gps without running this)
rosrun tf_stamped stamped_tf 
# visualize all these in rviz nd check what is world map






# 
# Kalibr, april, flea3 stuff
# run mavros to capture px4 data pose data 
# run flea to run camera
#     read apriltags data
# y2 to run kalibr transformation to get apriltag wrt px4 center
#
# camera_base used older one from 14.04, flea3 installed from source use flycap2 to see if that can get the image
# I had to change usb port 3 times
source ./softwares/flea3/flea_ros/devel/setup.bash 
roslaunch flea3 single_node.launch device:=15291221

# goto https://github.com/personalrobotics/apriltags and do as they say
# compile from scratch because makefile downloads some stuff from online that doesn't work otherwise
# something changed about downloading from source now it requires a different folder to be cloned (https://github.com/personalrobotics/apriltags-cpp) 
#  details given here https://github.com/personalrobotics/apriltags/issues/28
# installed libcgal-qt5-dev was giving some error otherwise
# pkg_search_module(OPENCV REQUIRED opencv>=2.3 opencv-2.3.1 opencv-3.1.0-dev)
# check if the opencv has changed in /opt/kinetic/lib/pkgconfig/opencv-3.2.0-dev.pc
# needed to install mavlink and control-toolbox ros packages
# remember to change the camera id if using a new camera
# get the right apriltags.launch from odroid that uses bigger tags  nd get the 16h5ps also
# change the topic and camera_info in the launch file
roslaunch apriltags apriltags.launch


#
#




related_files to check 
# mavros and mocap
px4_mocap.launch
px4flow.launch
stamped_tf.cpp
mocap_fake_gps.cpp
px4_mocap_pluginlist.yaml
px4_mocap_config.yaml

mocap.yaml
mocap.launch 

#flea3
single_node.launch
Flea3Dyn.cfg

#apriltag


These packages will work in 16.04 and not in 14.04
1. Packages required to run mocap_optitrack, mavros, mavros_extras(that has fake GPS), tf_stamped. From https://github.com/raaslab/Kalibr_Mocap.git . If you feel you already have these packages then please use 'beyond compare' to do a folder compare and figure out which are my important changes(I have mentioned a few at bottom)

2. Go to optitrack software and start motive.  I would suggest to use one of my settings file becauseI have changed a few important settings. You can do 'open project' from the initial dialog and then choose one of the recently modified 5N_*.ttp project files. You would have to create your new rigid object in this case. Make sure you delete the existing ones before making a new one. Another this to keep in mind is, if you have more than 1 rigid body, make sure rigid body 1 is the quadcopter. 
* 
3. You would have to go in 'data streaming'. You need to select ''(local IP) and then you need to change remote IP. Remote Ip is your computers IP(the computer that is running ROS) on raaslab network. Use 'return' key after selecting your IP in the text box, this activates the setting. Note: I think remote IP is called broadcast computer in motive. 

4. Then use the launch file src/launch/apr_mocap_flea_mav_stamp.launch from https://github.com/raaslab/Kalibr_Mocap.git. And remove the unneccesary apriltag, flea3 and Kalibr related stuff. Just keep the nodes mentioned in step 1. 

5. Discussion about the changes I had to make and what all nodes are doing:
* mavros and mavros_extras: this is required to receive data from pixhawk and run fake gps node. mavros node runnig at ttyUSB0 using at 921600(U can change the port to something else on pixhawk that supports serial). It uses /launch/px4_mocap_pluginlist.yaml and launch/px4_mocap_config.yaml. Please have a look at these and compare with default. This mavros_extras has a fake_gps.cpp that needed minimal but important changes. 
* mocap_optitrack: this is used to receive streamed data over wifi. This also needed some source code change to allow for multiple rigid bodies. Use beyond compare to check which file/s. 
* tf_stamped: this subscribes to mocap_optitrack and converts the pose data to tfstamped data that is required by fake_gps.cpp in mavros_extras. This is just a bookkeeping node that is needed. 





